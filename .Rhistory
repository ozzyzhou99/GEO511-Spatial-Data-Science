order.by = as.Date(weather_data$date)
)
# Temperature chart
temp_dygraph <- dygraph(temp_xts, main = "Daily Maximum Temperature in Buffalo, NY") %>%
dySeries("daily_temperature_2m_max", label = "Max Temp (°C)") %>%
dySeries("daily_temperature_2m_mean", label = "Mean Temp (°C)") %>%
dyRangeSelector(dateWindow = c("2023-01-01", as.character(Sys.Date())))
# Precipitation chart
precip_dygraph <- dygraph(precip_xts, main = "Daily Precipitation in Buffalo, NY") %>%
dySeries("daily_precipitation_sum", label = "Precipitation (mm)") %>%
dyRangeSelector(dateWindow = c("2023-01-01", as.character(Sys.Date())))
library(htmlwidgets)
saveWidget(temp_dygraph, "buffalo_temperature.html")
saveWidget(precip_dygraph, "buffalo_precipitation.html")
# Display the chart
print(temp_dygraph)
print(precip_dygraph)
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
install.packages("spData")
install.packages("tidycensus")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/Project/project.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_11/case_study/CS_11.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
plot(lulc)
plot(lulc)
# 加载必要的库
library(terra)
library(rasterVis)
library(ggmap)
library(tidyverse)
library(sf)
library(ncdf4)
# 创建数据目录
dir.create("data", showWarnings = FALSE)  # 创建data文件夹（如果不存在）
# 定义数据URL
lulc_url <- "https://github.com/adammwilson/DataScienceData/blob/master/inst/extdata/appeears/MCD12Q1.051_aid0001.nc?raw=true"
lst_url <- "https://github.com/adammwilson/DataScienceData/blob/master/inst/extdata/appeears/MOD11A2.006_aid0001.nc?raw=true"
# 下载数据文件
download.file(lulc_url, destfile="data/MCD12Q1.051_aid0001.nc", mode="wb")
download.file(lst_url, destfile="data/MOD11A2.006_aid0001.nc", mode="wb")
lulc=rast("data/MCD12Q1.051_aid0001.nc",subds="Land_Cover_Type_1")
lst=rast("data/MOD11A2.006_aid0001.nc",subds="LST_Day_1km")
plot(lulc)
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
str(lcds1)
str(lcds1)
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
# 加载必要的包
library(terra)
library(rasterVis)
library(ggplot2)
library(tidyverse)
library(sf)
library(ncdf4)
library(zoo)
# 创建数据目录
dir.create("data", showWarnings = FALSE)
# 定义数据URL
lulc_url <- "https://github.com/adammwilson/DataScienceData/blob/master/inst/extdata/appeears/MCD12Q1.051_aid0001.nc?raw=true"
lst_url <- "https://github.com/adammwilson/DataScienceData/blob/master/inst/extdata/appeears/MOD11A2.006_aid0001.nc?raw=true"
# 下载数据
download.file(lulc_url, destfile="data/MCD12Q1.051_aid0001.nc", mode="wb")
download.file(lst_url, destfile="data/MOD11A2.006_aid0001.nc", mode="wb")
# 设置土地覆盖类型
Land_Cover_Type_1 <- c(
Water = 0,
`Evergreen Needleleaf forest` = 1,
`Evergreen Broadleaf forest` = 2,
`Deciduous Needleleaf forest` = 3,
`Deciduous Broadleaf forest` = 4,
`Mixed forest` = 5,
`Closed shrublands` = 6,
`Open shrublands` = 7,
`Woody savannas` = 8,
Savannas = 9,
Grasslands = 10,
`Permanent wetlands` = 11,
Croplands = 12,
`Urban & built-up` = 13,
`Cropland/Natural vegetation mosaic` = 14,
`Snow & ice` = 15,
`Barren/Sparsely vegetated` = 16,
Unclassified = 254,
NoDataFill = 255)
# 创建查找表
lcd <- data.frame(
ID = Land_Cover_Type_1,
landcover = names(Land_Cover_Type_1),
col = c("#000080","#008000","#00FF00", "#99CC00","#99FF99", "#339966", "#993366", "#FFCC99",
"#CCFFCC", "#FFCC00", "#FF9900", "#006699", "#FFFF00", "#FF0000", "#999966", "#FFFFFF",
"#808080", "#000000", "#000000"),
stringsAsFactors = FALSE)
# Part 1: 时间序列提取
extract_point_timeseries <- function(lst) {
# 创建点位置
lw <- data.frame(x= -78.791547, y=43.007211) %>%
st_as_sf(coords=c("x","y"), crs=4326)
# 转换到栅格投影
lw_proj <- st_transform(lw, crs(lst))
# 提取数据
lst_values <- terra::extract(lst, lw_proj, buffer=1000, fun=mean, na.rm=TRUE)
dates <- time(lst)
# 创建数据框
ts_df <- data.frame(
date = as.Date(dates),
temp = as.numeric(lst_values[,-1])
) %>%
filter(!is.na(temp))
# 创建平滑数据
smooth_fit <- smooth.spline(as.numeric(ts_df$date), ts_df$temp, spar=0.1)
smooth_data <- data.frame(
date = ts_df$date,
temp = predict(smooth_fit, as.numeric(ts_df$date))$y
)
# 创建时间序列图
p <- ggplot() +
theme_grey() +
geom_point(data = ts_df,
mapping = aes(x = date, y = temp),
color = "black",
alpha = 0.5,
size = 0.8) +
geom_line(data = smooth_data,
mapping = aes(x = date, y = temp),
color = "blue",
linewidth = 0.3) +
scale_y_continuous(limits = c(-10, 40),
breaks = seq(0, 40, by = 20)) +
labs(x = "date",
y = "Monthly Mean Land Surface Temperature") +
theme(panel.grid.major = element_line(color = "white"),
panel.grid.minor = element_line(color = "white"))
return(list(data = ts_df, plot = p))
}
# Part 2: 月度气候数据计算
calculate_monthly_climatology <- function(lst) {
# 计算月平均值
lst_month <- tapp(lst, index="month", fun=mean, na.rm=TRUE)
# 设置月份顺序
month_order <- c("February", "March", "April", "May",
"June", "July", "August", "September",
"October", "November", "December", "January")
# 重新命名图层
names(lst_month) <- month.name
lst_month <- lst_month[[month_order]]
# 转换为数据框
plot_data <- as.data.frame(lst_month, xy=TRUE) %>%
gather(key="Month", value="Temperature", -x, -y) %>%
mutate(Month = factor(Month, levels=month_order))
# 创建月度气候图
p <- ggplot(plot_data) +
geom_raster(aes(x=x, y=y, fill=Temperature)) +
facet_wrap(~Month, ncol=4) +
scale_fill_gradient2(
low = "blue",
mid = "white",
high = "red",
midpoint = 15,
limits = c(-10, 30),
name = "value",
na.value = "grey85"
) +
coord_equal() +
theme_minimal() +
theme(
strip.text = element_text(size=10),
strip.background = element_rect(fill="grey85", color=NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill="grey85", color=NA),
legend.position = "right",
panel.border = element_blank()
)
return(list(plot = p, raster = lst_month))
}
# Part 2: 月度气候数据计算
calculate_monthly_climatology <- function(lst) {
# 计算月平均值
lst_month <- tapp(lst, index="month", fun=mean, na.rm=TRUE)
# 设置月份顺序
month_order <- c("February", "March", "April", "May",
"June", "July", "August", "September",
"October", "November", "December", "January")
# 重新命名图层
names(lst_month) <- month.name
lst_month <- lst_month[[month_order]]
# 转换为数据框
plot_data <- as.data.frame(lst_month, xy=TRUE) %>%
gather(key="Month", value="Temperature", -x, -y) %>%
mutate(Month = factor(Month, levels=month_order))
# 创建月度气候图
p <- ggplot(plot_data) +
geom_raster(aes(x=x, y=y, fill=Temperature)) +
facet_wrap(~Month, ncol=4) +
scale_fill_gradient2(
low = "blue",
mid = "white",
high = "red",
midpoint = 15,
limits = c(-10, 30),
name = "value",
na.value = "grey85"
) +
coord_equal() +
theme_minimal() +
theme(
strip.text = element_text(size=10),
strip.background = element_rect(fill="grey85", color=NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill="grey85", color=NA),
legend.position = "right",
panel.border = element_blank()
)
return(list(plot = p, raster = lst_month))
}
# Part 3: 土地覆盖类型分析
analyze_lst_by_landcover <- function(lst_file, lulc_file) {
# 读取LST月度数据
lst <- rast(lst_file, subds="LST_Day_1km")
lulc <- rast(lulc_file, subds="Land_Cover_Type_1")
# 温度转换
scoff(lst) <- cbind(0.02, -273.15)
# 计算月平均值
lst_month <- tapp(lst, index="month", fun=mean, na.rm=TRUE)
# 将LULC转换为因子栅格
lulc <- as.factor(lulc)
# 更新RAT
levels(lulc) <- lcd[,c("ID", "landcover")]
# 重采样到LST分辨率
lulc2 <- resample(lulc[[13]], lst_month[[1]], method="near")
# 提取值到数据框
lcds1 <- cbind.data.frame(
values(lst_month),
ID = values(lulc2)
) %>%
na.omit()
# 转换为tidy格式
lcds2 <- lcds1 %>%
gather(key="month", value="value", -ID) %>%
mutate(
ID = as.numeric(ID),
month = factor(gsub("m_", "", month),
levels = 1:12,
labels = month.name,
ordered = TRUE)
)
# 连接lcd表
lcds3 <- left_join(lcds2, lcd, by="ID")
# 过滤感兴趣的土地覆盖类型
lcds4 <- lcds3 %>%
filter(landcover %in% c("Urban & built-up", "Deciduous Broadleaf forest"))
# 创建对比图
p <- ggplot(lcds4, aes(x=month, y=value)) +
facet_wrap(~landcover) +
geom_violin(fill="grey70", alpha=0.5) +
geom_point(alpha=0.2, size=0.5, position=position_jitter(width=0.1)) +
geom_smooth(color="red", size=0.5, se=FALSE) +
theme_bw() +
theme(
axis.text.x = element_text(angle=45, hjust=1),
panel.grid.major = element_line(color="white"),
panel.grid.minor = element_line(color="white")
) +
labs(
x = "Month",
y = "Monthly Mean Land Surface Temperature (C)",
title = "Land Surface Temperature in Urban and Forest"
)
return(list(plot = p, data = lcds4))
}
landcover_results <- analyze_lst_by_landcover(lst_file, lulc_file)
lulc_file <- "data/MCD12Q1.051_aid0001.nc"
scoff(lst) <- cbind(0.02, -273.15)
# 运行三个部分的分析
ts_results <- extract_point_timeseries(lst)
climate_results <- calculate_monthly_climatology(lst)
print(climate_results$plot)
print(ts_results$plot)
rlang::last_trace()
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
rlang::last_trace()
print(lulc2)
print(lcds2)
print(lcds1)
print(lulc)
lst <- rast(lst_file, subds="LST_Day_1km")
lulc <- rast(lulc_file, subds="Land_Cover_Type_1")
print(lulc)
lulc <- rast(lulc_file, subds="Land_Cover_Type_1")
lulc2 <- resample(lulc[[13]], lst_month[[1]], method="near")
# 更新RAT
levels(lulc) <- lcd[,c("ID", "landcover")]
# 重采样到LST分辨率
lulc2 <- resample(lulc[[13]], lst_month[[1]], method="near")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
rlang::last_trace()
analyze_lst_by_landcover <- function(lst_file, lulc_file) {
# 读取LST月度数据
lst <- rast(lst_file, subds="LST_Day_1km")
lulc <- rast(lulc_file, subds="Land_Cover_Type_1")
# 温度转换
scoff(lst) <- cbind(0.02, -273.15)
# 计算月平均值
lst_month <- tapp(lst, index="month", fun=mean, na.rm=TRUE)
# 将LULC转换为因子栅格
lulc <- as.factor(lulc)
# 更新RAT
levels(lulc) <- lcd[,c("ID", "landcover")]
# 重采样到LST分辨率
lulc2 <- resample(lulc[[13]], lst_month[[1]], method="near")
# 提取值到数据框
lcds1 <- cbind.data.frame(
values(lst_month),
ID = values(lulc2)
) %>%
na.omit()
# 转换为tidy格式
lcds2 <- lcds1 %>%
gather(key="month", value="value", -ID) %>%
mutate(
ID = as.numeric(ID),
month = factor(gsub("m_", "", month),
levels = 1:12,
labels = month.name,
ordered = TRUE)
)
# 连接lcd表
lcds3 <- left_join(lcds2, lcd, by="ID")
# 过滤感兴趣的土地覆盖类型
lcds4 <- lcds3 %>%
filter(landcover %in% c("Urban & built-up", "Deciduous Broadleaf forest"))
# 创建对比图
p <- ggplot(lcds4, aes(x=month, y=value)) +
facet_wrap(~landcover) +
geom_violin(fill="grey70", alpha=0.5) +
geom_point(alpha=0.2, size=0.5, position=position_jitter(width=0.1)) +
geom_smooth(color="red", size=0.5, se=FALSE) +
theme_bw() +
theme(
axis.text.x = element_text(angle=45, hjust=1),
panel.grid.major = element_line(color="white"),
panel.grid.minor = element_line(color="white")
) +
labs(
x = "Month",
y = "Monthly Mean Land Surface Temperature (C)",
title = "Land Surface Temperature in Urban and Forest"
)
# Part 3: 土地覆盖类型分析
analyze_lst_by_landcover <- function(lst_file, lulc_file) {
# 读取LST月度数据
lst <- rast(lst_file, subds="LST_Day_1km")
lulc <- rast(lulc_file, subds="Land_Cover_Type_1")
# 温度转换
scoff(lst) <- cbind(0.02, -273.15)
# 计算月平均值
lst_month <- tapp(lst, index="month", fun=mean, na.rm=TRUE)
# 将LULC转换为因子栅格
lulc <- as.factor(lulc)
# 更新RAT
levels(lulc) <- lcd[,c("ID", "landcover")]
# 重采样到LST分辨率
lulc2 <- resample(lulc[[13]], lst_month[[1]], method="near")
# 提取值到数据框
lcds1 <- cbind.data.frame(
values(lst_month),
ID = values(lulc2)
) %>%
na.omit()
# 转换为tidy格式
lcds2 <- lcds1 %>%
gather(key="month", value="value", -ID) %>%
mutate(
ID = as.numeric(ID),
month = factor(gsub("m_", "", month),
levels = 1:12,
labels = month.name,
ordered = TRUE)
)
# 连接lcd表
lcds3 <- left_join(lcds2, lcd, by="ID")
# 过滤感兴趣的土地覆盖类型
lcds4 <- lcds3 %>%
filter(landcover %in% c("Urban & built-up", "Deciduous Broadleaf forest"))
# 创建对比图
p <- ggplot(lcds4, aes(x=month, y=value)) +
facet_wrap(~landcover) +
geom_violin(fill="grey70", alpha=0.5) +
geom_point(alpha=0.2, size=0.5, position=position_jitter(width=0.1)) +
geom_smooth(color="red", size=0.5, se=FALSE) +
theme_bw() +
theme(
axis.text.x = element_text(angle=45, hjust=1),
panel.grid.major = element_line(color="white"),
panel.grid.minor = element_line(color="white")
) +
labs(
x = "Month",
y = "Monthly Mean Land Surface Temperature (C)",
title = "Land Surface Temperature in Urban and Forest"
)
return(list(plot = p, data = lcds4))
}
lulc <- rast(lulc_file, subds="Land_Cover_Type_1")
# 读取LST月度数据
lst <- rast(lst_file, subds="LST_Day_1km")
# 温度转换
scoff(lst) <- cbind(0.02, -273.15)
# 计算月平均值
lst_month <- tapp(lst, index="month", fun=mean, na.rm=TRUE)
# 将LULC转换为因子栅格
lulc <- as.factor(lulc)
# 更新RAT
levels(lulc) <- lcd[,c("ID", "landcover")]
# 重采样到LST分辨率
lulc2 <- resample(lulc[[13]], lst_month[[1]], method="near")
# 提取值到数据框
lcds1 <- cbind.data.frame(
values(lst_month),
ID = values(lulc2)
) %>%
na.omit()
# 转换为tidy格式
lcds2 <- lcds1 %>%
gather(key="month", value="value", -ID) %>%
mutate(
ID = as.numeric(ID),
month = factor(gsub("m_", "", month),
levels = 1:12,
labels = month.name,
ordered = TRUE)
)
print(lcds2)
print(lcds1)
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
view(lcds1)
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
source("D:/UB/UBLearns/GEO 511 Spatial data science/GEO511/week_10/case_study/CS_10.R")
